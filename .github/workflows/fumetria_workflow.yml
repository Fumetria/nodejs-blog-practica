name: fumetria_workflow

on:
  push:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install npm dependencies
        run: npm install
      - name: Run linter
        run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: ubuntu-latest

    steps:
      #step 1
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Run start
      #   run: npm start

      #step 2
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: "http://localhost:3000"
        id: cypress
        continue-on-error: true

      - name: Save test result
        run: echo "${{ steps.cypress.outcome }}" > result.txt

      #step 3
      - name: Create artifact
        uses: actions/upload-artifact@v4
        with:
          name: result.txt
          path: .

  modify_readme_job:
    needs: cypress_job
    runs-on: ubuntu-latest

    steps:
      #step 1
      - name: Checkout code
        uses: actions/checkout@v4

      #step 2
      - name: Get artifact
        uses: actions/download-artifact@v4
        with:
          name: result.txt

      #step 3
      - name: Set output
        run: echo "::set-output name=cypress_outcome::$(cat result.txt)"
        id: cypress_outcome

      #step 4
      - name: Add badge test result
        uses: ./.github/actions/add_badge_action
        with:
          test_result: ${{steps.cypress_outcome.outputs.cypress_outcome}}

      #step 5
      - name: Commit and Push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: .
          author_name: "Fu Jun Fu Lin"
          author_email: "fulin.fujun@outlook.es"
          message: "Update test badge result"
          push: true

  deploy_job:
    needs: cypress_job
    runs-on: ubuntu-latest

    steps:
      #step 1
      - name: Checkout code
        uses: actions/checkout@v4
      #step 2
      - name: Deploy in Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          # github-token: ${{ secrets.GH_TOKEN }} #Optional
          vercel-args: "--prod" #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
          # working-directory: ../../
